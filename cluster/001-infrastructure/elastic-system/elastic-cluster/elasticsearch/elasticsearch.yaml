---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elastic-cluster
  namespace: elastic-system
spec:
  version: 8.10.0

  auth:
    roles:
      - secretName: elastic-cluster-es-roles
    fileRealm:
      - secretName: elastic-cluster-es-users-diskover
      - secretName: elastic-cluster-es-users-vector

  http:
    tls:
      # 禁用容器级的HTTPS，使用K8S Ingress提供HTTPS服务
      selfSignedCertificate:
        disabled: true

  nodeSets:
    # 划分独立的master节点
    # master节点不需要太多资源
    - name: master
      count: 3
      config:
        # 节点的类型是通过角色定义决定的，一个节点可以有多种角色
        # 但因为master节点独立划分出来更方便管理和后续可能的扩展，所以将master单独划分，这里给master组的节点分配master角色
        node.roles: [ "master" ]
        xpack.ml.enabled: true
      podTemplate:
        spec:
          containers:
            - name: elasticsearch  # 保持默认名称不变，该名称被默认的模板使用
              # eck会按照这里设置的资源限制，为每个节点设置java的堆内存限制，所以无需在其他地方再设置一遍java的内存
              # master节点不需要太多资源，分一点点就够了
              resources:
                requests:
                  cpu: 100m
                  memory: 2Gi
                limits:
                  cpu: 2
                  memory: 2Gi
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data  # 保持默认名称不变，该名称被默认的模板使用，修改后需要自己设置容器的挂载
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: ceph-application-high-performance

    # data + ingest + ml + transform复合角色节点，为主要的数据存储和搜索负载节点
    - name: data
      count: 3
      config:
        # 节点的类型是通过角色定义决定的，一个节点可以有多种角色
        # 由于已经有了独立的master节点，这里其他的data节点不需要master角色，只需要包含除了master以外的所有需要的角色即可
        node.roles: [ "data", "ingest", "ml", "transform" ]
      podTemplate:
        spec:
          containers:
            - name: elasticsearch  # 保持默认名称不变，该名称被默认的模板使用
              # data节点需要足够的CPU和内存资源以确保性能
              resources:
                requests:
                  cpu: 100m
                  memory: 4Gi
                limits:
                  cpu: 4
                  memory: 4Gi
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data  # 保持默认名称不变，该名称被默认的模板使用，修改后需要自己设置容器的挂载
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 200Gi
            storageClassName: ceph-application-high-performance
