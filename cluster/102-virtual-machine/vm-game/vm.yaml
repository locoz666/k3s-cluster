---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: vm-game
  namespace: virtual-machine
spec:
  runStrategy: Manual
  template:
    metadata:
      labels:
        app: windows
      annotations:
        vm.kubevirt.io/os: "windows11"
    spec:
      # 虚拟机被发送关机信号后后等待关闭的时间
      terminationGracePeriodSeconds: 0

      domain:
        # 机箱信息设置
        chassis:
          asset: "Asset 1234"
          manufacturer: "Dell Inc."
          serial: "D4L123456"
          sku: "SKU-Dell-5678"
          version: "Version 1.0"

        # 根据高性能虚拟机模板设置
        clock:
          timezone: "Asia/Shanghai"
          timer:
            hpet:
              present: false
            pit:
              tickPolicy: delay
            rtc:
              tickPolicy: catchup
            hyperv: { }

        firmware:
          bootloader:
            # 使用UEFI引导启动
            efi:
              # 开启安全启动
              secureBoot: true
          # BIOS 报告的 UUID。默认为随机生成的 uid。
          uuid: c8f99fc8-20f5-46c4-85e5-2b841c547cef
          # SMBIOS 中的系统序列号
          serial: e4686d2c-6e8d-4335-b8fd-81bee22f4815

        # CPU设置
        cpu:
          sockets: 1  # 虚拟机中的CPU插槽数量
          threads: 2  # 虚拟机中每个CPU的线程数，设成2就类似于Intel的超线程
          cores: 16  # 分配CPU核心数
          # 不使用以下两个配置，避免产生K8S的resources.requests配置锁定CPU资源
          #          dedicatedCpuPlacement: true  # 分配专用CPU资源，给虚拟机固定CPU核心
          #          isolateEmulatorThread: true  # 分配一个独立的CPU核心用于QEMU的模拟器线程，避免影响虚拟机本身
          model: host-passthrough  # 开启CPU直通以榨干性能

        # 内存设置（这里用的是k8s原生写法）
        resources:
          requests:
            memory: 48G
            devices.kubevirt.io/kvm: "1"
        # 根据高性能虚拟机模板设置
        features:
          acpi: { }
          apic: { }
          smm: { }
          kvm:
            hidden: true
          hyperv:
            relaxed: { }
            vapic: { }
            vpindex: { }
            spinlocks:
              spinlocks: 8191
            synic: { }
            synictimer:
              direct: { }
            tlbflush: { }
            frequencies: { }
            reenlightenment: { }
            ipi: { }
            runtime: { }
            reset: { }

        devices:
          autoattachGraphicsDevice: false  # 是否添加默认图形设备（VNC）
          autoattachPodInterface: false  # 是否添加Pod网络接口
          blockMultiQueue: true  # 开启virtio的硬盘多队列操作
          networkInterfaceMultiqueue: true  # 开启virtio的网卡多队列操作

          # 硬盘设置
          disks:
            # 系统安装ISO
            #            - name: system-iso
            #              cdrom:
            #                bus: sata  # 手动设置为sata以避免安装需要virtio驱动才能读取文件
            #              bootOrder: 1

            # virtio驱动盘
            #            - name: virtio-driver-disk
            #              cdrom:
            #                bus: sata  # 手动设置为sata以避免安装需要virtio驱动才能读取文件

            # 系统盘
            - name: system-disk
              disk:
                bus: virtio  # 使用virtio以榨干性能
              bootOrder: 2
            #              cache: "none"  # 关闭缓存以减少IO操作层数
            #              io: "native"  # 使用原生IO以榨干性能
            - name: data-disk
              disk:
                bus: virtio  # 使用virtio以榨干性能

          # 直通GPU设置
          gpus:
            - name: gpu1
              deviceName: nvidia.com/AD102_GEFORCE_RTX_4090

          # 直通硬件设置
          hostDevices:
            - name: gpu1_audio_controller
              deviceName: devices.kubevirt.io/NVIDIA_RTX_4090_AUDIO_CONTROLLER
            - name: ssd1
              deviceName: devices.kubevirt.io/SAMSUNG_970_PRO_1TB

          # 网卡设置 https://kubevirt.io/user-guide/virtual_machines/interfaces_and_networks/#frontend
          interfaces:
            - name: host-network
              macAddress: 9E:5C:2D:0E:86:2B
              bridge: { }
              model: virtio

          # 根据高性能虚拟机模板设置，该设置是给VNC操作时鼠标指针位置同步用的
          inputs:
            - type: tablet
              bus: usb
              name: tablet
          # 开启TPM
          tpm:
            # 开启数据持久化存储
            persistent: true
          rng: { }

      volumes:
        # 系统安装ISO
        - name: system-iso
          persistentVolumeClaim:
            claimName: iso-windows11-22621

        # virtio驱动盘
        - name: virtio-driver-disk
          persistentVolumeClaim:
            claimName: virtio-win

        # 系统盘
        - name: system-disk
          persistentVolumeClaim:
            claimName: vm-game-system-disk

        - name: data-disk
          persistentVolumeClaim:
            claimName: vm-game-data-disk

      # 后端网络设置 https://kubevirt.io/user-guide/virtual_machines/interfaces_and_networks/#backend
      networks:
        - name: host-network
          multus:
            networkName: br0
