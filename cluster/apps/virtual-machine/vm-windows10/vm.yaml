---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: vm-windows10
spec:
  running: false
  template:
    metadata:
      labels:
        kubevirt.io/name: vm-windows10

    spec:
      domain:
        # 使用uefi而不是bios引导启动
        firmware:
          bootloader:
            efi:
              secureBoot: false  # kubevirt暂未支持安全启动，需要先关闭

        features:
          acpi: { }
          apic: { }
          hyperv:
            evmcs: { }
            frequencies: { }
            ipi: { }
            reenlightenment: { }
            relaxed: { }
            reset: { }
            runtime: { }
            spinlocks:
              spinlocks: 8191
            synic: { }
            #            synictimer:  # 会导致无法启动，暂时关闭
            #              direct: { }
            tlbflush: { }
            vapic: { }
            vpindex: { }

        # CPU设置
        cpu:
          # 开启CPU直通以榨干性能
          model: host-passthrough
          # 分配CPU核心数
          cores: 16

        # 内存设置（这里用的是k8s原生写法）
        resources:
          requests:
            memory: 16G

        devices:
          # 开启多队列操作以榨干性能
          blockMultiQueue: true
          networkInterfaceMultiqueue: true

          # 硬盘设置
          disks:
            # 系统安装ISO
            - name: cdromiso
              cdrom:
                bus: sata  # 手动设置为sata以避免安装需要virtio驱动才能读取文件
              bootOrder: 1

            # virtio驱动盘
            - name: virtiocontainerdisk
              cdrom:
                bus: sata  # 手动设置为sata以避免安装需要virtio驱动才能读取文件

            # 系统盘
            - name: system-disk
              disk:
                bus: virtio  # 使用virtio以榨干性能
              bootOrder: 2
              cache: none  # 关闭缓存以减少IO操作层数
              io: native  # 使用原生IO以榨干性能

          # 网卡设置 https://kubevirt.io/user-guide/virtual_machines/interfaces_and_networks/#frontend
          interfaces:
            - name: default
              masquerade: { }

      # 后端网络设置 https://kubevirt.io/user-guide/virtual_machines/interfaces_and_networks/#backend
      networks:
        - name: default
          pod: { }

      volumes:
        # 系统安装ISO
        - name: cdromiso
          persistentVolumeClaim:
            claimName: iso-windows10-21h1

        # virtio驱动盘
        - name: virtiocontainerdisk
          containerDisk:
            image: kubevirt/virtio-container-disk

        # 系统盘
        - name: system-disk
          persistentVolumeClaim:
            claimName: vmdisk-windows10
