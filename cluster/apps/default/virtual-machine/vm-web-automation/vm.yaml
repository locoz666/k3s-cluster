---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: vm-web-automation
spec:
  runStrategy: Manual
  template:
    metadata:
      labels:
        app: "virtual-machine"
      annotations:
        vm.kubevirt.io/os: "windows-11"
    spec:
      # 虚拟机被发送关机信号后后等待关闭的时间
      terminationGracePeriodSeconds: 30

      domain:
        # 机箱信息设置
        chassis:
          asset: "Asset 1234"
          manufacturer: "Dell Inc."
          serial: "D4L123456"
          sku: "SKU-Dell-5678"
          version: "Version 1.0"

        # 根据高性能虚拟机模板设置
        clock:
          timezone: "Asia/Shanghai"
          timer:
            hpet:
              present: false
            pit:
              tickPolicy: delay
            rtc:
              tickPolicy: catchup
            hyperv: { }

        firmware:
          bootloader:
            # 使用UEFI引导启动
            efi:
              # 开启安全启动
              secureBoot: true
          # BIOS 报告的 UUID。默认为随机生成的 uid。
          uuid: a701f992-77e3-4f99-ab6e-aec7c3e7b7cd
          # SMBIOS 中的系统序列号
          serial: 78c59c2b-e53c-4de2-b4fb-a051889fa446

        # CPU设置
        cpu:
          sockets: 1  # 虚拟机中的CPU插槽数量
          threads: 1  # 虚拟机中每个CPU的线程数，设成2就类似于Intel的超线程
          cores: 8  # 分配CPU核心数
          # 不使用以下两个配置，避免产生K8S的resources.requests配置锁定CPU资源
#          dedicatedCpuPlacement: true  # 分配专用CPU资源，给虚拟机固定CPU核心
#          isolateEmulatorThread: true  # 分配一个独立的CPU核心用于QEMU的模拟器线程，避免影响虚拟机本身
          model: host-passthrough  # 开启CPU直通以榨干性能

        # 内存设置（这里用的是k8s原生写法）
        resources:
          requests:
            memory: 32G
            devices.kubevirt.io/kvm: "1"

        # 根据高性能虚拟机模板设置
        features:
          acpi: { }
          apic: { }
          smm: { }
          kvm:
            hidden: true
          hyperv:
            relaxed: { }
            vapic: { }
            vpindex: { }
            spinlocks:
              spinlocks: 8191
            synic: { }
            synictimer:
              direct: { }
            tlbflush: { }
            frequencies: { }
            reenlightenment: { }
            ipi: { }
            runtime: { }
            reset: { }

        devices:
          autoattachGraphicsDevice: true  # 是否添加默认图形设备（VNC）
          autoattachPodInterface: false  # 是否添加Pod网络接口
          blockMultiQueue: true  # 开启virtio的硬盘多队列操作
          networkInterfaceMultiqueue: true  # 开启virtio的网卡多队列操作

          # 硬盘设置
          disks:
            # 系统盘
            - name: system-disk
              disk:
                bus: virtio  # 使用virtio以榨干性能
              bootOrder: 1

          # 网卡设置 https://kubevirt.io/user-guide/virtual_machines/interfaces_and_networks/#frontend
          interfaces:
            - name: host-network
              macAddress: DA:4E:A2:CA:B5:BA
              macvtap: { }
              model: virtio

          # 根据高性能虚拟机模板设置，该设置是给VNC操作时鼠标指针位置同步用的
          inputs:
            - type: tablet
              bus: usb
              name: tablet

          # 开启TPM
          tpm:
            # 开启数据持久化存储
            persistent: true
          rng: { }

      volumes:
        # 系统盘
        - name: system-disk
          persistentVolumeClaim:
            claimName: vm-web-automation-system-disk

      # 后端网络设置 https://kubevirt.io/user-guide/virtual_machines/interfaces_and_networks/#backend
      networks:
        - name: host-network
          multus:
            networkName: macvtap-network
