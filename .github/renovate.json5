{
  "enabled": true,
  "semanticCommits": "enabled",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "rebaseWhen": "conflicted",
  "helm-values": {
    "fileMatch": [
      "cluster/.+/helm-release\\.yaml$"
    ]
  },
  "docker": {
    "digest": {
      "enabled": true
    }
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ],
    "ignorePaths": [
      "cluster/000-base/"
    ]
  },
  "regexManagers": [
    // regexManager to read and process HelmReleases and CRDs
    {
      "fileMatch": [
        "cluster/.+\\.yaml$"
      ],
      "matchStrings": [
        // helm releases
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n",
        // cert-manager crd
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    }
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": ["helm"],
      "separateMinorPatch": true,
      "ignoreDeprecated": true
    },
    // global docker datasource settings
    {
      "matchDatasources": ["docker"],
      "enabled": true,
      "commitMessageTopic": "container image {{depName}}",
      "commitMessageExtra": "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
      "matchUpdateTypes": ["major", "minor", "patch"]
    },
    // add labels according to package and update types
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "labels": ["renovate/image", "dep/major"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "labels": ["renovate/image", "dep/minor"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "labels": ["renovate/image", "dep/patch"]
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "labels": ["renovate/helm", "dep/major"]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "labels": [
        "renovate/helm",
        "dep/minor"
      ]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "labels": [
        "renovate/helm",
        "dep/patch"
      ]
    },
    // 测试调整renovate对photoprism的版本号解析逻辑
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "photoprism/photoprism"
      ],
      "versioning": "regex:(?<major>\\d{2})(?<minor>\\d{2})(?<patch>\\d{2})$"
    },
    // 测试允许部分镜像和helm包自动更新
    {
      "matchPackageNames": [
        "linuxserver/qbittorrent",
        "linuxserver/jackett",
        "linuxserver/radarr",
        "linuxserver/sonarr",
        "ghcr.io/onedr0p/bazarr",
        "ghcr.io/onedr0p/lidarr",
        "ghcr.io/flaresolverr/flaresolverr",
        "luckypuppy514/jproxy",
        "emby/embyserver",
        "homeassistant/home-assistant",
        "nodered/node-red",
        "collabora/code",
        "codercom/code-server",
        "timberio/vector",
        "itzg/mc-router",
        "thijsvanloef/palworld-server-docker",
        "vaultwarden/server",
        "influxdb",
        "registry.k8s.io/metrics-server/metrics-server"
      ],
      "matchUpdateTypes": [
        "patch",
        "minor"
      ],
      // 除了大版本以外，均自动更新
      "automerge": true
    },
    {
      "matchPackageNames": [
        "postgresql",
        "kube-prometheus-stack",
        "cert-manager",
        "gitlab",
        "gitlab-runner",
        "nextcloud",
        "vector",
        "sentry",
        "traefik",
        "eck-operator",
        "metrics-server",
        "nexus-repository-manager"
      ],
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "patch",
        "minor"
      ],
      // 除了大版本以外，均自动更新
      "automerge": true
    }
  ]
}
